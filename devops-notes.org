* ECS

There are 2 types of IAM roles: 
- ECS instance roles ( EC2 )
- Task roles

ECS provisions EC2's using ASG

Autoscaling in ECS is very tricky: 
how do you connect metrics from tasks & tie them to ASG that is running EC2's hosting tasks?
One solution is to use Beanstalk to run ECS Cluster for us and handle autoscaling
Other: use Fargate to manage/provision EC2's

Metrics:
You can have cluster & service level metrics 
'task insights' provides metrics on individual tasks ( NEW & paid service )

Logs:
No need for CW Agent to send logs from tasks 
Instance logs can be obtained only if we install CW Agent on them

CI/CD:
CodeDeploy can be used to deploy to ECS

* OpsWorks
Stack has 'layers'

Layers have EC2's 
We have to declare number of instances UPFRONT

There are 2 types of EC2's: 
- 24/7 ( run at specific time / schedule )
- load ( run if target load is reached eg: 40% cpu reached )

Because Instances have to declared upfront, Opsworks is not like ASG, its not fully dynamic

Lifecycles:
- Setup
- Configure
- Deploy
- UnDeploy
- Destroy

Every time:
- EC2 comes online / is destroyed
- ELB is attached
->>>> Configure stage will run on ALL INSTANCES in ALL LAYERS, and configure CHEF script will be ran
Eg. You start new instance & it will be registered with the rest of your app / cluster


* ASG 

** ASG + SQS
*** Use case: You want to scale a number of EC2's based on a number of items in a queue
Solution:
- create a custom metric that measures avg items per EC2
- create a target tracking policy
- alarms based on that target tracking policy will invoke scaling policy

Acceptable backlog Example:
We have 1500 items in queue, 10 EC2's, avg. processing time is 0.1s, max
acceptable latency is 10s
10/0.1s => 100 max backlog per instance
Since backlog is @ 150 ( 1500/10) =-> we need to scale up by 5 instances
*** How do we protect intance from being terminated while its processing item from queue?
Solution:
when instance picks up item from SQS, run a custom script from EC2
that will run CLI & enable 'instance protection' until job is done
